# Sample workflow for building and publish it to GitHub Packages
name: Keep the versions up-to-date

on:
  release:
    types: [created, published, edited]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  pages: write
  contents: read
  packages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
# Build job
  github-pages:
    runs-on: ubuntu-latest
    environment:
      name: github-pages-36
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: ðŸ“‚ Checkout
        uses: actions/checkout@v3

      - name: ðŸ”¨ Get gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: ðŸš€ Build and deploy
        uses: jeffreytse/jekyll-deploy-action@v0.4.0
        with:
          provider: 'github'
          jekyll_src: './'
          jekyll_cfg: '_config.yml'
          token: ${{ secrets.JEKYLL_GITHUB_TOKEN }}
          pre_build_commands: 'make && make build'

      - name: ðŸ“‚ Push docker image
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          docker_io_token: ${{ secrets.DOCKER_IO_ACCESS_TOKEN }}

      - name: ðŸ’Ž Publish the latest tag
        uses: Actions-R-Us/actions-tagger@latest
        with:
          publish_latest_tag: true
